variables:
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true

  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3-openjdk-8

cache:
  paths:
    - .m2/repository

.verify:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  except:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

verify:jdk8:
  extends:
    - .verify

deploy:jdk8:
  stage: deploy
  script:
    - if [ ! -f ci_settings.xml ]; then
        echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS deploy --settings ci_settings.xml'
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# stages:
#   - semgrep

# semgrep:
#   # A Docker image with Semgrep installed.
#   image: semgrep/semgrep

#   rules:
#     # Scan changed files in MRs, (diff-aware scanning):
#     - if: $CI_MERGE_REQUEST_IID

#     # Scan mainline (default) branches and report all findings.
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

#   variables:
#     # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
#     # Generate a token from Semgrep AppSec Platform > Settings
#     # and add it as a variable in your GitLab CI/CD project settings.
#     SEMGREP_APP_TOKEN: $SEMGREP_APP_TOKEN

#     # Upload findings to GitLab SAST Dashboard:
#     SEMGREP_GITLAB_JSON: "1"

#   # Other optional settings in the `variables` block:

#   # Receive inline MR comments (requires Semgrep AppSec Platform account)
#   # Setup instructions:
#   # https://semgrep.dev/docs/semgrep-appsec-platform/gitlab-mr-comments
#   #   GITLAB_TOKEN: $PAT

#   # Run the "semgrep ci" command on the command line of the docker image and send findings
#   # to GitLab SAST.
#   script: semgrep ci --gitlab-sast > gl-sast-report.json || true
#   artifacts:
#     reports:
#       sast: gl-sast-report.json